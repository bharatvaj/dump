Access Tokens
-------------
https://docs.microsoft.com/en-us/windows/win32/secauthz/access-tokens

An access token is an object that describes the security context of a process or thread.

If the password by the user is authenticated, the system produces an access token. Every process executed on behalf of this user has a copy of this access token.

* The security identifier (SID) for the user's account
* SIDs for the groups of which the user is a member
* A logon SID that identifies the current logon session
* A list of the privileges held by either the user or the user's groups
* An owner SID
* The SID for the primary group
* The default DACL that the system uses when the user creates a securable object without specifying a security descriptor
* The source of the access token
* Whether the token is a primary or impersonation(what?) token
* An optional list of restricting SIDs
* Current impersonation levels(what?)
* Other statistics

Primary token describes #security_context associated with the user account.

OpenProcessToken
----------------
We probably need the primary token.

Impersonation
-------------
A server can act on behalf of a client, something like RPC shit.

security context
----------------
The security attributes or rules that are currently in effect. For example, the current user logged on to the computer or the personal identification number entered by the smart card user. For SSPI, a security context is an opaque data structure that contains security data relevant to a connection, such as a session key or an indication of the duration of the session

We can perform operations on our token. Yay!

Some `struct` are defined for tokens like TOKEN_* and they will be returned by the token functions.
